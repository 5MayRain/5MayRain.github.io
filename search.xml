<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>GitHub静态网站绑定域名</title>
    <url>/posts/%E6%95%99%E7%A8%8B/github%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/</url>
    <content><![CDATA[<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>上一篇文章讲到怎么获取免费的域名，这一篇讲怎么把获取到的域名绑定GitHub中的静态网站。</p>
<h3 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h3><ol>
<li>打开 <a href="https://www.dnspod.cn/" target="_blank" rel="noopener">DNSPod</a> 网站，注册登录，可以直接使用微信或者QQ登录</li>
</ol>
<p><img src="/img/posts/2020/05/18/13.png" alt=""></br></p>
<ol start="2">
<li>登录成功后，打开 <font color="red">管理控制台</font>，选择 <font color="red">DNS 解析</font></li>
</ol>
<p><img src="/img/posts/2020/05/18/14.png" alt=""></br></p>
<ol start="3">
<li>点击添加域名，输入你申请到的域名，然后点击确认。添加成功后会看到 <font color="red">DNS错误</font>，需要到域名管理修改服务器地址</li>
</ol>
<p><img src="/img/posts/2020/05/18/15.png" alt=""> <img src="/img/posts/2020/05/18/16.png" alt=""></br></p>
<ol start="4">
<li>打开你申请域名的网站，进入域名管理    </li>
</ol>
<p><img src="/img/posts/2020/05/18/17.png" alt=""> <img src="/img/posts/2020/05/18/18.png" alt=""></br></p>
<ol start="5">
<li>选择自定义，修改服务器地址，输入完成后点击 <font color="red">Change Nameservers</font>。然后等待DNS服务器生效，短的话几分钟，长的话几个小时，请耐性等候。</li>
</ol>
<blockquote>
<p>f1g1ns1.dnspod.net<br>f1g1ns2.dnspod.net</p>
</blockquote>
<p><img src="/img/posts/2020/05/18/19.png" alt=""> <img src="/img/posts/2020/05/18/20.png" alt=""></br></p>
<ol start="6">
<li>生效后，打开你的GitHub静态网站的仓库，在仓库的根目录里面添加 <font color="red">CNAME</font> 文件，输入你的域名，然后点击 <font color="red">Commit changes</font></li>
</ol>
<p><img src="/img/posts/2020/05/18/21.png" alt=""> <img src="/img/posts/2020/05/18/22.png" alt=""></br></p>
<ol start="7">
<li>回到DNSPod网站，打开你的域名，添加GitHub静态网地址的记录，点击确认完成输入<blockquote>
<p>主机记录分别为 @ 和 www<br>记录类型为 CNAME<br>记录值为 GitHub静态网地址</p>
</blockquote>
</li>
</ol>
<p><img src="/img/posts/2020/05/18/23.png" alt=""></br></p>
<ol start="8">
<li>打开静态网站的仓库设置，找到 <font color="red">GitHub Pages</font>，如果 <font color="red">Custom domain</font> 是空的，就输入你的域名，然后点击保存，刷新网页等待生效。生效后会看到  <font color="red">Your site is published at 你的域名</font>，点击你的域名，会可以看到网站了。</li>
</ol>
<p><img src="/img/posts/2020/05/18/24.png" alt=""> <img src="/img/posts/2020/05/18/25.png" alt=""></br></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>域名</tag>
        <tag>GitHub</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Freenom获取免费域名</title>
    <url>/posts/%E6%95%99%E7%A8%8B/freenom%E8%8E%B7%E5%8F%96%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D/</url>
    <content><![CDATA[<h3 id="Freenom"><a href="#Freenom" class="headerlink" title="Freenom"></a>Freenom</h3><p>Freenom 是一个提供免费域名申请的网站，最长可以选择一年，到期前2个星期会提醒是否续费，到时直接可以免费续费再用一年，相当于永久免费。</p>
<h3 id="申请"><a href="#申请" class="headerlink" title="申请"></a>申请</h3><ol>
<li>打开 <a href="http://www.freenom.com/zh/index.html" target="_blank" rel="noopener">Freenom</a> 网站，查询自己想要的域名是否可用，可以看到tk、ml、ga、cf、gq这些后缀都是免费的。</li>
</ol>
<p><img src="/img/posts/2020/05/18/01.png" alt=""> <img src="/img/posts/2020/05/18/02.png" alt=""></br></p>
<ol start="2">
<li>点击 <font color="red">现在获取！</font>，你会发现这些域名都不可用，你只需要把你想要的域名和后缀都输入，例如我想要的域名是 <font color="red">mrzgh</font>，后缀是<font color="red">ml</font>，再查询就会发现可以用了，之后点击完成即可。</li>
</ol>
<p><img src="/img/posts/2020/05/18/03.png" alt=""> <img src="/img/posts/2020/05/18/04.png" alt=""></br></p>
<ol start="3">
<li>修改域名时间，默认是3个月，最长可以修改到12个月，修改完成后点击 <font color="red">Continue</font></li>
</ol>
<p><img src="/img/posts/2020/05/18/05.png" alt=""> <img src="/img/posts/2020/05/18/06.png" alt=""></br></p>
<ol start="4">
<li>登录结账，有社交账号的可以选择社交账号登录，没有的可以选择邮箱，我选择用邮箱，输入完成后点击 <font color="red">Verify My Email Address</font></li>
</ol>
<p><img src="/img/posts/2020/05/18/07.png" alt=""></br></p>
<ol start="5">
<li>验证邮箱，网站会发送一封邮件，点击邮件内的链接进行验证</li>
</ol>
<p><img src="/img/posts/2020/05/18/08.png" alt=""></br></p>
<ol start="6">
<li>点击验证链接后，会打开一个注册信息的页面，输入相关信息即可。注意：你输入的地址必须和ip查出来的地址符合，还要关闭广告屏蔽插件，不然会申请失败</li>
</ol>
<p><img src="/img/posts/2020/05/18/09.png" alt=""></br></p>
<ol start="7">
<li>申请成功后显示如下页面</li>
</ol>
<p><img src="/img/posts/2020/05/18/10.png" alt=""></br></p>
<ol start="8">
<li>查看域名，点击导航的 <font color="red">Services</font>，在弹出的菜单中点击<font color="red">My Domains</font>，然后会弹出登录页面，登录完成后就可以查看自己申请的域名了。</li>
</ol>
<p><img src="/img/posts/2020/05/18/11.png" alt=""> <img src="/img/posts/2020/05/18/12.png" alt=""></br></p>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>申请失败的原因有</p>
<blockquote>
<ol>
<li>你输入的地址和ip查询的地址不符合</li>
<li>未关闭广告屏蔽插件</li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>域名</tag>
      </tags>
  </entry>
  <entry>
    <title>使用GoIndex搭建GoogleDrive网站目录</title>
    <url>/posts/%E6%95%99%E7%A8%8B/%E4%BD%BF%E7%94%A8goindex%E6%90%AD%E5%BB%BAgoogledrive%E7%BD%91%E7%AB%99%E7%9B%AE%E5%BD%95/</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>使用 Goindex 不用翻墙即可访问团队盘的文件，实现在线看小姐姐。<br>由于原来的 GoIndex 已删库，现提供由他人修改并加上自己美化的GoIndex。<br>地址：<a href="https://github.com/5MayRain/goIndex-theme-nexmoe" target="_blank" rel="noopener">GitHub</a></p>
<h3 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h3><p><a href="https://go.zgh.workers.dev/" target="_blank" rel="noopener">app-v2.js</a> &nbsp;&nbsp; <a href="https://demo.zgh.workers.dev/" target="_blank" rel="noopener">app-v3.js</a></p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ol>
<li><p>打开 <a href="https://install.kenci.workers.dev/" target="_blank" rel="noopener">https://install.kenci.workers.dev/</a> 网站,验证并获取代码<br><img src="/img/posts/2020/05/13/01.png" alt=""> <img src="/img/posts/2020/05/13/02.png" alt=""> <img src="/img/posts/2020/05/13/03.png" alt=""> <img src="/img/posts/2020/05/13/04.png" alt=""> <img src="/img/posts/2020/05/13/05.png" alt=""> <img src="/img/posts/2020/05/13/06.png" alt=""> <img src="/img/posts/2020/05/13/07.png" alt=""> <img src="/img/posts/2020/05/13/08.png" alt=""></p>
</li>
<li><p>使用相对应 app.js 的模板，将获取到的id和授权填入</p>
</li>
</ol>
<blockquote>
<p>app-v2.js        &gt;        GoIndex.js<br>app-v3.js        &gt;        GoIndex_v2.js</p>
</blockquote>
<ol start="3">
<li><p>登录<a href="https://www.cloudflare.com/zh-cn/" target="_blank" rel="noopener">Cloudflare</a>（没有就自己注册），部署代码<br><img src="/img/posts/2020/05/13/09.png" alt=""> <img src="/img/posts/2020/05/13/10.png" alt=""> <img src="/img/posts/2020/05/13/11.png" alt=""> <img src="/img/posts/2020/05/13/12.png" alt=""></p>
</li>
<li><p>使用你选择的模板相对应的app.js，替换模板默认的app.js</p>
</li>
</ol>
<blockquote>
<p><a href="https://cdn.jsdelivr.net/gh/5MayRain/goIndex-theme-nexmoe@1.1.2/app-v2.js" target="_blank" rel="noopener">app-v2.js</a><br><a href="https://cdn.jsdelivr.net/gh/5MayRain/goIndex-theme-nexmoe@1.1.5/app-v3.js" target="_blank" rel="noopener">app-v3.js</a></p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> html = <span class="string">`</span></span><br><span class="line"><span class="string">......</span></span><br><span class="line"><span class="string">&lt;script src="替换"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">......</span></span><br><span class="line"><span class="string">`</span>;</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>保存并部署</li>
</ol>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>Google</tag>
      </tags>
  </entry>
  <entry>
    <title>GoogleDrive团队盘无限容量获取</title>
    <url>/posts/%E6%95%99%E7%A8%8B/googledrive%E5%9B%A2%E9%98%9F%E7%9B%98%E6%97%A0%E9%99%90%E5%AE%B9%E9%87%8F%E8%8E%B7%E5%8F%96/</url>
    <content><![CDATA[<ol>
<li><p>登录 <a href="https://mail.google.com/" target="_blank" rel="noopener">Google邮箱</a></p>
</li>
<li><p>选择下列的网站，哪一个都行</p>
<blockquote>
<p><a href="https://gdrive.zppcw.cn/" target="_blank" rel="noopener">sheffield.ac.uk</a><br><a href="https://tv.ssr.workers.dev/" target="_blank" rel="noopener">ccsf</a><br><a href="https://teamdrive.xcpx.workers.dev/" target="_blank" rel="noopener">swccd</a><br><a href="https://gd.zxd.workers.dev/" target="_blank" rel="noopener">Yesyesxx.me</a></p>
</blockquote>
</li>
<li><p>填入团队盘的名称和你的Google邮箱，填完点击 Submit ，成功后登录 <a href="https://drive.google.com/?tab=wo&authuser=0" target="_blank" rel="noopener">GoogleDrive</a> 可看到</p>
</li>
</ol>
<p>PS：创建成功后，团队里面只有你一个人，你就是管理员</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>Google</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Hexo+GitHub搭建个人网站（1、本地安装）</title>
    <url>/posts/Hexo/%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%EF%BC%881%E3%80%81%E6%9C%AC%E5%9C%B0%E5%AE%89%E8%A3%85%EF%BC%89/</url>
    <content><![CDATA[<h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页</p>
<h3 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h3><ol>
<li>全是静态文件，访问速度快；</li>
<li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li>
<li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于GitHub的；</li>
<li>数据绝对安全，基于GitHub的版本管理，想恢复到哪个历史版本都行；</li>
<li>博客内容可以轻松打包、转移、发布到其它平台；</li>
</ol>
<h3 id="一、安装环境"><a href="#一、安装环境" class="headerlink" title="一、安装环境"></a>一、安装环境</h3><p><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node.js</a><br><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git</a></p>
<blockquote>
<p>安装成功后，在桌面右键打开 Git Bash，输入以下命令验证是否成功，成功则会出现相应的版本号。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git version</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>
<p><img src="/img/posts/2020/05/12/01.png" alt=""></p>
<h3 id="二、安装Hexo"><a href="#二、安装Hexo" class="headerlink" title="二、安装Hexo"></a>二、安装Hexo</h3><p>2.1 安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure>
<p><img src="/img/posts/2020/05/12/02.png" alt=""><br>2.2 初始化<br>在电脑新建MyHexo文件夹（名字可以随便取），这个文件夹作为你存放代码的地方，最好不要随便放。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> MyHexo</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure>
<p><img src="/img/posts/2020/05/12/03.png" alt=""><br>2.3 输入以下代码开启服务，打开网址<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p><img src="/img/posts/2020/05/12/04.png" alt=""></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>Hexo</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Hexo+GitHub搭建个人网站（2、部署）</title>
    <url>/posts/Hexo/%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%EF%BC%882%E3%80%81%E9%83%A8%E7%BD%B2%EF%BC%89/</url>
    <content><![CDATA[<h3 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h3><p>GitHub是一个面向开源及私有软件项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名GitHub。</p>
<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>一个GitHub账号，没有就去注册 <a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a></p>
<h3 id="一、创建仓库"><a href="#一、创建仓库" class="headerlink" title="一、创建仓库"></a>一、创建仓库</h3><p><img src="/img/posts/2020/05/12/05.png" alt=""></p>
<blockquote>
<p>仓库名必须是 <font color="red">你的用户名+.github.io</font>，例如我的用户名是 <font color="red">5MayRain</font> ，那我的仓库名则为 <font color="red">5MayRain.github.io</font></p>
</blockquote>
<p><img src="/img/posts/2020/05/12/06.png" alt=""> <img src="/img/posts/2020/05/12/07.png" alt=""></p>
<h3 id="二、配置SSH-key"><a href="#二、配置SSH-key" class="headerlink" title="二、配置SSH key"></a>二、配置SSH key</h3><blockquote>
<p>把 <font color="red">邮箱</font> 替换成你注册GitHub的邮箱，然后点击回车。接着会让你输入文件名，点击回车直接忽略，接着会让输入两次密码，点击两次回车，直接设置为空，不用输入密码 。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"邮箱"</span></span><br></pre></td></tr></table></figure>
<p><img src="/img/posts/2020/05/12/08.png" alt=""></p>
<blockquote>
<p>打开你的用户目录，找到 <font color="red">.ssh\id_rsa.pub</font> 文件，拷贝里面的内容，然后打开你的GitHub主页，进入<font color="red">Settings-&gt; SSH and GPG keys -&gt; New SSH key</font></p>
</blockquote>
<p><img src="/img/posts/2020/05/12/09.png" alt=""> <img src="/img/posts/2020/05/12/10.png" alt=""> <img src="/img/posts/2020/05/12/11.png" alt=""></p>
<blockquote>
<p>输入以下代码，测试是否成功<br>如果提示 <font color="red">Are you sure you want to continue connecting (yes/no)?</font>，输入yes<br>然后会看到：<font color="red">Hi 5MayRain（用户名）! You’ve successfully authenticated, but GitHub does not provide shell access.</font>，这个信息，说明SSH已配置成功！</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<p><img src="/img/posts/2020/05/12/12.png" alt=""></p>
<h3 id="三、部署"><a href="#三、部署" class="headerlink" title="三、部署"></a>三、部署</h3><blockquote>
<p>修改Hexo根目录的 <font color="red">_config.yml</font> 文件，鼠标滚动到最后一行,添加下面的代码<br>把用户名换为你的用户名即可</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: git@github.com:用户名/用户名.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p><img src="/img/posts/2020/05/12/13.png" alt=""></p>
<blockquote>
<p>安装部署插件</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p><img src="/img/posts/2020/05/12/14.png" alt=""></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.email <span class="string">"邮箱"</span> //GitHub注册使用的邮箱</span><br><span class="line">git config --global user.name <span class="string">"用户名"</span> //GitHub用户名</span><br><span class="line">hexo g //生成静态网页</span><br><span class="line">hexo d //部署</span><br></pre></td></tr></table></figure>
<p><img src="/img/posts/2020/05/12/15.png" alt=""><br>最后在浏览器打开你的地址 <font color="red">用户名.github.io</font></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>Hexo</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo常用命令</title>
    <url>/posts/Hexo/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h3 id="常见命令"><a href="#常见命令" class="headerlink" title="常见命令"></a>常见命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">"postName"</span> 			<span class="comment">#新建文章</span></span><br><span class="line">hexo new page <span class="string">"pageName"</span> 		<span class="comment">#新建页面</span></span><br><span class="line">hexo generate 				<span class="comment">#生成静态页面至public目录</span></span><br><span class="line">hexo server 				<span class="comment">#开启服务（默认端口4000，'ctrl + c'关闭server）</span></span><br><span class="line">hexo deploy 				<span class="comment">#部署</span></span><br><span class="line">hexo <span class="built_in">help</span>  				<span class="comment">#帮助</span></span><br><span class="line">hexo version				<span class="comment">#查看Hexo的版本</span></span><br></pre></td></tr></table></figure>

<h3 id="缩写命令"><a href="#缩写命令" class="headerlink" title="缩写命令"></a>缩写命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n == hexo new	<span class="comment">#新建</span></span><br><span class="line">hexo g == hexo generate	<span class="comment">#生成静态网页</span></span><br><span class="line">hexo s == hexo server	<span class="comment">#开启服务</span></span><br><span class="line">hexo d == hexo deploy	<span class="comment">#部署</span></span><br></pre></td></tr></table></figure>

<h3 id="组合命令"><a href="#组合命令" class="headerlink" title="组合命令"></a>组合命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s -g <span class="comment">#生成并本地预览</span></span><br><span class="line">hexo d -g <span class="comment">#生成并上传</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo使用gulp优化</title>
    <url>/posts/Hexo/hexo%E4%BD%BF%E7%94%A8gulp%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<h3 id="gulp"><a href="#gulp" class="headerlink" title="gulp"></a>gulp</h3><p>通过对站点使用的静态资源进行压缩，来优化网站的访问速度。</p>
<h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><blockquote>
<p>在网站根目录打开 Git Bash 命令窗口，输入下列命令 </p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g gulp</span><br><span class="line">npm install gulp gulp-htmlclean gulp-htmlmin gulp-clean-css gulp-uglify-es gulp-imagemin del gulp-minify-inline-json --save</span><br></pre></td></tr></table></figure>

<h3 id="配置gulp"><a href="#配置gulp" class="headerlink" title="配置gulp"></a>配置gulp</h3><blockquote>
<p>在网站根目录创建 gulpfile.js 文件，写入下列代码</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="keyword">var</span> minifycss = <span class="built_in">require</span>(<span class="string">'gulp-clean-css'</span>);</span><br><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify-es'</span>).default;</span><br><span class="line"><span class="keyword">var</span> htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>);</span><br><span class="line"><span class="keyword">var</span> htmlclean = <span class="built_in">require</span>(<span class="string">'gulp-htmlclean'</span>);</span><br><span class="line"><span class="keyword">var</span> imagemin = <span class="built_in">require</span>(<span class="string">'gulp-imagemin'</span>);</span><br><span class="line"><span class="keyword">var</span> del = <span class="built_in">require</span>(<span class="string">'del'</span>);</span><br><span class="line"><span class="keyword">var</span> Hexo = <span class="built_in">require</span>(<span class="string">'hexo'</span>);</span><br><span class="line"><span class="keyword">var</span> minifyInlineJSON = <span class="built_in">require</span>(<span class="string">'gulp-minify-inline-json'</span>);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'clean'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> del([<span class="string">'public/**/*'</span>]);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> hexo = <span class="keyword">new</span> Hexo(process.cwd(), &#123;&#125;);</span><br><span class="line">gulp.task(<span class="string">'generate'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">cb</span>) </span>&#123;</span><br><span class="line">    hexo.init().then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> hexo.call(<span class="string">'generate'</span>, &#123;</span><br><span class="line">            watch: <span class="literal">false</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> hexo.exit();</span><br><span class="line">    &#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> cb()</span><br><span class="line">    &#125;).catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err);</span><br><span class="line">        hexo.exit(err);</span><br><span class="line">        <span class="keyword">return</span> cb(err);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'deploy'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> hexo.init().then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> hexo.call(<span class="string">'deploy'</span>, &#123;</span><br><span class="line">            watch: <span class="literal">false</span></span><br><span class="line">        &#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> hexo.exit();</span><br><span class="line">        &#125;).catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> hexo.exit(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'minify-css'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.css'</span>)</span><br><span class="line">        .pipe(minifycss(&#123;</span><br><span class="line">            compatibility: <span class="string">'ie8'</span></span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'minify-html'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.html'</span>)</span><br><span class="line">        .pipe(htmlclean())</span><br><span class="line">        .pipe(htmlmin(&#123;</span><br><span class="line">            removeComments: <span class="literal">true</span>,</span><br><span class="line">            minifyJS: <span class="literal">true</span>,</span><br><span class="line">            minifyCSS: <span class="literal">true</span>,</span><br><span class="line">            minifyURLs: <span class="literal">true</span>,</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'minify-img'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/img/**/*'</span>)</span><br><span class="line">        .pipe(imagemin([</span><br><span class="line">            imagemin.gifsicle(&#123;</span><br><span class="line">                interlaced: <span class="literal">true</span></span><br><span class="line">            &#125;),</span><br><span class="line">            imagemin.jpegtran(&#123;</span><br><span class="line">                progressive: <span class="literal">true</span></span><br><span class="line">            &#125;),</span><br><span class="line">            imagemin.optipng(&#123;</span><br><span class="line">                optimizationLevel: <span class="number">5</span></span><br><span class="line">            &#125;),</span><br><span class="line">            imagemin.svgo(&#123;</span><br><span class="line">                plugins: [&#123;</span><br><span class="line">                    removeViewBox: <span class="literal">true</span></span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    cleanupIDs: <span class="literal">false</span></span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;)</span><br><span class="line">        ]))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./public/img'</span>))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'minify-js'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.js'</span>)</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'minifyInlineJSON'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.html'</span>)</span><br><span class="line">        .pipe(minifyInlineJSON())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'compress'</span>, gulp.series(<span class="string">'minify-html'</span>, <span class="string">'minify-css'</span>, <span class="string">'minify-img'</span>, <span class="string">'minify-js'</span>, <span class="string">'minifyInlineJSON'</span>));</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, gulp.series(<span class="string">'clean'</span>, <span class="string">'generate'</span>, <span class="string">'compress'</span>, <span class="string">'deploy'</span>));</span><br></pre></td></tr></table></figure>

<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean		<span class="comment">#清除缓存</span></span><br><span class="line">hexo g			<span class="comment">#生成静态网页</span></span><br><span class="line">gulp			<span class="comment">#压缩</span></span><br><span class="line">hexo d			<span class="comment">#部署</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/uncategorized/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Hexo使用主题</title>
    <url>/posts/Hexo/hexo%E4%BD%BF%E7%94%A8%E4%B8%BB%E9%A2%98/</url>
    <content><![CDATA[<h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p>去Hexo网站查找你喜欢的主题 <a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a></p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ol>
<li><p>例如我要的是<a href="https://github.com/next-theme/hexo-theme-next" target="_blank" rel="noopener">NexT主题</a>，这主题已经提供了代码，只需要执行即可</p>
</li>
<li><p>在Hexo根目录打开 Git Bash 命令窗口，输入下列命令</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<p><img src="/img/posts/2020.05.12/16.png" alt=""></p>
<ol start="3">
<li>编辑Hexo根目录的 <font color="red">_config.yml</font> 文件 ，找到<font color="red"> theme: </font> 这行，把内容修改为 <font color="red">next</font>（主题的名称）</li>
</ol>
<p><img src="/img/posts/2020.05.12/17.png" alt=""></p>
<ol start="4">
<li>开启服务，就可以看到主题已经改变了</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s		//开启服务</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
